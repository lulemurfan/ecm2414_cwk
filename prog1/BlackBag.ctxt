#BlueJ class context
comment0.params=peb\ corres\ bagName
comment0.target=BlackBag(int[],\ WhiteBag,\ java.lang.String)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ BlackBag,\ arguments\ int[]\ peb\ (an\ integer\ array\ peb\ is\ used\ to\ populate\ the\ pebbles\ array),\ WhiteBag\ corres\ (used\ to\ allocate\r\n\ the\ corresponding\ white\ bag),\ String\ bagName\ (to\ provide\ the\ bag\ with\ a\ name)\r\n
comment1.params=
comment1.target=int\ takePebble()
comment1.text=\r\n\ This\ method\ returns\ a\ random\ pebble\ from\ the\ black\ bag,\ a\ pebble\ is\ an\ integer.\ Also\ throws\ an\ EmptyBagException\ if\ the\ bag\ and\ the\ corresponding\ white\r\n\ bag\ is\ empty.\ Has\ no\ arguments.\r\n\ \r\n
comment2.params=
comment2.target=int\ numberOfPebbles()
comment2.text=\r\n\ Returns\ the\ number\ of\ pebbles\ in\ the\ array\ pebbles\r\n
comment3.params=peb
comment3.target=void\ addPebbles(int[])
comment3.text=\r\n\ Sets\ the\ pebbles\ array\ to\ the\ new\ array\ of\ argument\ int[]\ peb.\r\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\r\n\ returns\ the\ name\ of\ the\ bag\r\n
comment5.params=a
comment5.target=void\ makeArray(int[])
comment5.text=\r\n\ Makes\ a\ pebbles\ array\ of\ length\ and\ of\ reference\ to\ the\ int[]\ a\ argument\r\n
comment6.params=peb
comment6.target=void\ putPebbleInWhite(int)
comment6.text=\r\n\ Places\ a\ pebble\ into\ the\ white\ bag\r\n
comment7.params=
comment7.target=void\ takeCorrespondingPebbles()
comment7.text=\r\n\ takes\ the\ white\ bag's\ pebbles\r\n
numComments=8
